{
  "title": "ml5.js: KNN Classification Part 1",
  "description": "This video covers \u201cKNN Classification.\u201d In this first part, I begin the process of building a \u201cteachable machine\u201d-style image classifier with ml5.js.",
  "videoNumber": "5.1",
  "videoId": "KTNqXwkLuM4",
  "date": "2019-02-04",
  "languages": ["ml5", "p5.js"],
  "topics": ["knn classification", "machine learning"],
  "canContribute": true,
  "timestamps": [{
      "time": "0:00",
      "title": "Introduction"
    },
    {
      "time": "1:16",
      "title": "Teachable Machine"
    },
    {
      "time": "2:22",
      "title": "Yining Shi's ml5 implementation of knn nearest neighbors"
    },
    {
      "time": "3:02",
      "title": "Nikhil Thorat's article on the Teachable Machine"
    },
    {
      "time": "3:43",
      "title": "knn classifier"
    },
    {
      "time": "4:20",
      "title": "MobileNet model"
    },
    {
      "time": "6:42",
      "title": "Softmax: normalizes data to give probabilities"
    },
    {
      "time": "8:25",
      "title": "logits - the \u201cfeature extractor\u201d layer"
    },
    {
      "time": "10:52",
      "title": "Comparing two images"
    },
    {
      "time": "11:35",
      "title": "KNN nearest neighbors"
    },
    {
      "time": "12:35",
      "title": "Using the feature.infer function to get the logits"
    },
    {
      "time": "13:58",
      "title": "tensors"
    },
    {
      "time": "14:41",
      "title": "Using datasync to get the \u201cdigital finger print\u201d of an image"
    }
  ],
  "codeExamples": [{
    "title": "KNN Classification",
    "description": "This sketch demonstrates how to train the KNN image classifier.",
    "urls": {
      "p5": "https://editor.p5js.org/codingtrain/sketches/RERqlwJL"
    }
  }],
  "groupLinks": [{
      "title": "References",
      "links": [{
          "icon": "ðŸ’»",
          "title": "Teachable Machine",
          "url": "https://teachablemachine.withgoogle.com/",
          "description": "Page with background and references on Teachable Machine."
        },
        {
          "icon": "ðŸ’»",
          "title": "Machine Learning for the Web by Yining Shi",
          "url": "https://github.com/yining1023/machine-learning-for-the-web",
          "description": "Yining Shi's page for the \u201cMachine Learning for the Web\u201d class at ITP, NYU."
        },
        {
          "icon": "ðŸ““",
          "title": "How to build a Teachable Machine with TensorFlow.js by Nikhil Thorat",
          "url": "https://observablehq.com/@nsthorat/how-to-build-a-teachable-machine-with-tensorflow-js",
          "description": "Article by Nikhil Thorat which explains how Teachable Machine was built."
        },
        {
          "icon": "ðŸ““",
          "title": "MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications",
          "url": "https://arxiv.org/abs/1704.04861",
          "description": "Technical article about MobileNets."
        }
      ]
    },
    {
      "title": "Videos",
      "links": [{
        "icon": "ðŸš‚",
        "title": "Beginners Guide to Machine Learning in JavaScript",
        "url": "https://www.youtube.com/playlist?list=PLRqwX-V7Uu6YPSwT06y_AEYTqIwbeam3y",
        "description": "This playlist provides an introduction to developing creative coding projects with machine learning."
      }]
    }
  ]
}